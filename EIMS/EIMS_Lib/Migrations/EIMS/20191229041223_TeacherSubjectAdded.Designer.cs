// <auto-generated />
using System;
using EIMS_Lib.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EIMS_Lib.Migrations.EIMS
{
    [DbContext(typeof(EimsDbContext))]
    [Migration("20191229041223_TeacherSubjectAdded")]
    partial class TeacherSubjectAdded
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EIMS_Lib.Models.AcademicClass", b =>
                {
                    b.Property<int>("AcademicClassId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AcademicSessionId");

                    b.Property<int>("ClassLevelId");

                    b.Property<string>("ClassName")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<int>("ShiftId");

                    b.HasKey("AcademicClassId");

                    b.HasIndex("AcademicSessionId");

                    b.HasIndex("ClassLevelId");

                    b.HasIndex("ShiftId");

                    b.ToTable("AcademicClasses");
                });

            modelBuilder.Entity("EIMS_Lib.Models.AcademicSession", b =>
                {
                    b.Property<int>("AcademicSessionId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("date");

                    b.Property<string>("SessionName")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<int>("SessionStatus");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("date");

                    b.HasKey("AcademicSessionId");

                    b.ToTable("AcademicSessions");
                });

            modelBuilder.Entity("EIMS_Lib.Models.BusinessDay", b =>
                {
                    b.Property<int>("BusinessDayId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsOn");

                    b.Property<int>("Weekday");

                    b.HasKey("BusinessDayId");

                    b.ToTable("BusinessDays");
                });

            modelBuilder.Entity("EIMS_Lib.Models.ClassDuration", b =>
                {
                    b.Property<int>("ClassDurationId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClassType");

                    b.Property<int>("Duration");

                    b.HasKey("ClassDurationId");

                    b.ToTable("ClassDurations");
                });

            modelBuilder.Entity("EIMS_Lib.Models.ClassLevel", b =>
                {
                    b.Property<int>("ClassLevelId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("EducationLevel");

                    b.Property<bool>("IsRunning");

                    b.HasKey("ClassLevelId");

                    b.ToTable("ClassLevels");
                });

            modelBuilder.Entity("EIMS_Lib.Models.ClassPeriod", b =>
                {
                    b.Property<int>("ClassPeriodId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClassType");

                    b.Property<TimeSpan>("EndTime")
                        .HasColumnType("time");

                    b.Property<int>("ShiftId");

                    b.Property<TimeSpan>("StartTime")
                        .HasColumnType("time");

                    b.HasKey("ClassPeriodId");

                    b.HasIndex("ShiftId");

                    b.ToTable("ClassPeriods");
                });

            modelBuilder.Entity("EIMS_Lib.Models.Designation", b =>
                {
                    b.Property<int>("DesignationId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("PostName")
                        .IsRequired()
                        .HasMaxLength(40);

                    b.HasKey("DesignationId");

                    b.ToTable("Designations");
                });

            modelBuilder.Entity("EIMS_Lib.Models.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DesignationId");

                    b.Property<string>("Discriminator")
                        .IsRequired();

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<string>("EmployeeName")
                        .IsRequired()
                        .HasMaxLength(60);

                    b.Property<int>("EmployeeType");

                    b.Property<string>("Fingerprint")
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<DateTime>("JoinDate")
                        .HasColumnType("date");

                    b.Property<string>("PermanentAddress")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(15);

                    b.Property<string>("Picture")
                        .HasMaxLength(50);

                    b.Property<string>("PresentAddress")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.HasKey("EmployeeId");

                    b.HasIndex("DesignationId");

                    b.ToTable("Employees");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Employee");
                });

            modelBuilder.Entity("EIMS_Lib.Models.EmployeeAttendance", b =>
                {
                    b.Property<int>("EmployeeAttendanceId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("EmployeeId");

                    b.Property<DateTime>("InTime")
                        .HasColumnType("datetime");

                    b.HasKey("EmployeeAttendanceId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("EmployeeAttendances");
                });

            modelBuilder.Entity("EIMS_Lib.Models.Holiday", b =>
                {
                    b.Property<int>("HolidayId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<int>("Duration");

                    b.Property<DateTime>("HolidayDate")
                        .HasColumnType("date");

                    b.Property<int>("HolidayType");

                    b.HasKey("HolidayId");

                    b.ToTable("Holidays");
                });

            modelBuilder.Entity("EIMS_Lib.Models.InstituteInfo", b =>
                {
                    b.Property<int>("InstituteInfoId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000);

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<DateTime>("Established")
                        .HasColumnType("date");

                    b.Property<string>("FounderName")
                        .IsRequired()
                        .HasMaxLength(40);

                    b.Property<string>("InstituteName")
                        .IsRequired();

                    b.Property<string>("InstituteSlogan")
                        .IsRequired();

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("PrincipalName")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("InstituteInfoId");

                    b.ToTable("InstituteInfo");
                });

            modelBuilder.Entity("EIMS_Lib.Models.Qualification", b =>
                {
                    b.Property<int>("QualificationId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompletionYear");

                    b.Property<string>("Degree")
                        .IsRequired()
                        .HasMaxLength(40);

                    b.Property<int>("EmployeeId");

                    b.Property<string>("InstituteName")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("Result")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.HasKey("QualificationId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Qualifications");
                });

            modelBuilder.Entity("EIMS_Lib.Models.Room", b =>
                {
                    b.Property<int>("RoomId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Capacity");

                    b.Property<string>("RoomNo")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<int>("RoomType");

                    b.HasKey("RoomId");

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("EIMS_Lib.Models.Section", b =>
                {
                    b.Property<int>("SectionId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AcademicClassId");

                    b.Property<string>("SectionName")
                        .IsRequired()
                        .HasMaxLength(40);

                    b.Property<int>("SubjectGroup");

                    b.HasKey("SectionId");

                    b.HasIndex("AcademicClassId");

                    b.ToTable("Sections");
                });

            modelBuilder.Entity("EIMS_Lib.Models.Shift", b =>
                {
                    b.Property<int>("ShiftId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<TimeSpan>("EndTime")
                        .HasColumnType("time");

                    b.Property<int>("ShiftType");

                    b.Property<TimeSpan>("StartTime")
                        .HasColumnType("time");

                    b.HasKey("ShiftId");

                    b.ToTable("Shifts");
                });

            modelBuilder.Entity("EIMS_Lib.Models.Student", b =>
                {
                    b.Property<int>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("date");

                    b.Property<int>("BloodGroup");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("FatherName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Fingerprint")
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<int>("Gender");

                    b.Property<string>("MotherName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("Picture")
                        .HasMaxLength(250);

                    b.Property<string>("Roll")
                        .IsRequired()
                        .HasMaxLength(15);

                    b.Property<int>("SectionId");

                    b.Property<string>("StudentName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("StudentId");

                    b.HasIndex("SectionId");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("EIMS_Lib.Models.StudentAttendance", b =>
                {
                    b.Property<int>("StudentAttendanceId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("InTime")
                        .HasColumnType("datetime");

                    b.Property<int>("StudentId");

                    b.HasKey("StudentAttendanceId");

                    b.HasIndex("StudentId");

                    b.ToTable("StudentAttendances");
                });

            modelBuilder.Entity("EIMS_Lib.Models.Subject", b =>
                {
                    b.Property<int>("SubjectId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClassLevelId");

                    b.Property<string>("SubjectCode")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<int>("SubjectGroup");

                    b.Property<string>("SubjectName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int>("SubjectScope");

                    b.Property<int>("SubjectType");

                    b.HasKey("SubjectId");

                    b.HasIndex("ClassLevelId");

                    b.ToTable("Subjects");
                });

            modelBuilder.Entity("EIMS_Lib.Models.TeacherSubject", b =>
                {
                    b.Property<int>("TeacherSubjectId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("EmployeeId");

                    b.Property<int>("SubjectId");

                    b.Property<int?>("TeacherEmployeeId");

                    b.HasKey("TeacherSubjectId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("SubjectId");

                    b.HasIndex("TeacherEmployeeId");

                    b.ToTable("TeacherSubjects");
                });

            modelBuilder.Entity("EIMS_Lib.Models.Teacher", b =>
                {
                    b.HasBaseType("EIMS_Lib.Models.Employee");

                    b.Property<int>("ClassLevel");

                    b.Property<int>("Gender");

                    b.Property<int>("SubjectGroup");

                    b.HasDiscriminator().HasValue("Teacher");
                });

            modelBuilder.Entity("EIMS_Lib.Models.AcademicClass", b =>
                {
                    b.HasOne("EIMS_Lib.Models.AcademicSession", "AcademicSession")
                        .WithMany("AcademicClasses")
                        .HasForeignKey("AcademicSessionId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("EIMS_Lib.Models.ClassLevel", "ClassLevel")
                        .WithMany("AcademicClasses")
                        .HasForeignKey("ClassLevelId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("EIMS_Lib.Models.Shift", "Shift")
                        .WithMany("AcademicClasses")
                        .HasForeignKey("ShiftId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("EIMS_Lib.Models.ClassPeriod", b =>
                {
                    b.HasOne("EIMS_Lib.Models.Shift", "Shift")
                        .WithMany("ClassPeriods")
                        .HasForeignKey("ShiftId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("EIMS_Lib.Models.Employee", b =>
                {
                    b.HasOne("EIMS_Lib.Models.Designation", "Designation")
                        .WithMany("Employees")
                        .HasForeignKey("DesignationId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("EIMS_Lib.Models.EmployeeAttendance", b =>
                {
                    b.HasOne("EIMS_Lib.Models.Employee", "Employee")
                        .WithMany("EmployeeAttendances")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("EIMS_Lib.Models.Qualification", b =>
                {
                    b.HasOne("EIMS_Lib.Models.Teacher", "Teacher")
                        .WithMany("Qualifications")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("EIMS_Lib.Models.Section", b =>
                {
                    b.HasOne("EIMS_Lib.Models.AcademicClass", "AcademicClass")
                        .WithMany("Sections")
                        .HasForeignKey("AcademicClassId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("EIMS_Lib.Models.Student", b =>
                {
                    b.HasOne("EIMS_Lib.Models.Section", "Section")
                        .WithMany("Students")
                        .HasForeignKey("SectionId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("EIMS_Lib.Models.StudentAttendance", b =>
                {
                    b.HasOne("EIMS_Lib.Models.Student", "Student")
                        .WithMany("StudentAttendances")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("EIMS_Lib.Models.Subject", b =>
                {
                    b.HasOne("EIMS_Lib.Models.ClassLevel", "ClassLevel")
                        .WithMany("Subjects")
                        .HasForeignKey("ClassLevelId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("EIMS_Lib.Models.TeacherSubject", b =>
                {
                    b.HasOne("EIMS_Lib.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("EIMS_Lib.Models.Subject", "Subject")
                        .WithMany("TeacherSubjects")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("EIMS_Lib.Models.Teacher")
                        .WithMany("TeacherSubjects")
                        .HasForeignKey("TeacherEmployeeId");
                });
#pragma warning restore 612, 618
        }
    }
}
